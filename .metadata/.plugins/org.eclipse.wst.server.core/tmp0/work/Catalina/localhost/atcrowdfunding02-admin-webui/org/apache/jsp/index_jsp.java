/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.99
 * Generated at: 2020-04-22 04:37:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>测试主页</title>\n");
      out.write("<base href=\"http://");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/\"/>\n");
      out.write("<script type=\"text/javascript\" src=\"jquery/jquery-2.1.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"layer/layer.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(function(){\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#btn1\").click(function(){\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"send/array/one.html\",\t// 请求目标资源的地址\n");
      out.write("\t\t\t\t\"type\": \"post\",\t\t\t\t\t// 请求方式\n");
      out.write("\t\t\t\t\"data\": {\t\t\t\t\t\t// 要发送的请求参数\n");
      out.write("\t\t\t\t\t\"array\": [5,8,12]\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"dataType\": \"text\",\t\t\t\t\t// 如何对待服务器端返回的数据\n");
      out.write("\t\t\t\t\"success\": function(response) {\t\t// 服务器端成功处理请求后调用的回调函数，response是响应体数据\n");
      out.write("\t\t\t\t\talert(response);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\":function(response) {\t\t// 服务器端处理请求失败后调用的回调函数，response是响应体数据\n");
      out.write("\t\t\t\t\talert(response);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#btn2\").click(function(){\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"send/array/two.html\",\t// 请求目标资源的地址\n");
      out.write("\t\t\t\t\"type\": \"post\",\t\t\t\t\t// 请求方式\n");
      out.write("\t\t\t\t\"data\": {\t\t\t\t\t\t// 要发送的请求参数\n");
      out.write("\t\t\t\t\t\"array[0]\": 5,\n");
      out.write("\t\t\t\t\t\"array[1]\": 8,\n");
      out.write("\t\t\t\t\t\"array[2]\": 11,\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"dataType\": \"text\",\t\t\t\t\t// 如何对待服务器端返回的数据\n");
      out.write("\t\t\t\t\"success\": function(response) {\t\t// 服务器端成功处理请求后调用的回调函数，response是响应体数据\n");
      out.write("\t\t\t\t\talert(response);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\":function(response) {\t\t// 服务器端处理请求失败后调用的回调函数，response是响应体数据\n");
      out.write("\t\t\t\t\talert(response);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#btn3\").click(function(){\n");
      out.write("\t\t\t//首先定义数据，并转化成json格式\n");
      out.write("\t\t\tvar array = [5,8,12];\n");
      out.write("\t\t\tvar requestBody = JSON.stringify(array);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"send/array/three.html\",\n");
      out.write("\t\t\t\t\"type\": \"post\",\n");
      out.write("\t\t\t\t\"data\": requestBody,\n");
      out.write("\t\t\t\t\"contentType\": \"application/json;charset=UTF-8\",\n");
      out.write("\t\t\t\t\"dataType\": \"text\",\n");
      out.write("\t\t\t\t\"success\":function(response){\n");
      out.write("\t\t\t\t\talert(response);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\": function(resonse){\n");
      out.write("\t\t\t\t\talert(reponse);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#btn4\").click(function(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// 准备要发送的数据\n");
      out.write("\t\t\tvar student = {\n");
      out.write("\t\t\t\t\"stuId\": 5,\n");
      out.write("\t\t\t\t\"stuName\":\"tom\",\n");
      out.write("\t\t\t\t\"address\": {\n");
      out.write("\t\t\t\t\t\"province\": \"广东\",\n");
      out.write("\t\t\t\t\t\"city\": \"深圳\",\n");
      out.write("\t\t\t\t\t\"street\":\"后瑞\"\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"subjectList\": [\n");
      out.write("\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\t\"subjectName\": \"JavaSE\",\n");
      out.write("\t\t\t\t\t\t\"subjectScore\": 100\n");
      out.write("\t\t\t\t\t},{\n");
      out.write("\t\t\t\t\t\t\"subjectName\": \"SSM\",\n");
      out.write("\t\t\t\t\t\t\"subjectScore\": 99\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t],\n");
      out.write("\t\t\t\t\"map\": {\n");
      out.write("\t\t\t\t\t\"k1\":\"v1\",\n");
      out.write("\t\t\t\t\t\"k2\":\"v2\"\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t};\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// 将JSON对象转换为JSON字符串\n");
      out.write("\t\t\tvar requestBody = JSON.stringify(student);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// 发送Ajax请求\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\":\"send/compose/object.json\",\n");
      out.write("\t\t\t\t\"type\":\"post\",\n");
      out.write("\t\t\t\t\"data\":requestBody,\n");
      out.write("\t\t\t\t\"contentType\":\"application/json;charset=UTF-8\",\n");
      out.write("\t\t\t\t\"dataType\":\"json\",\n");
      out.write("\t\t\t\t\"success\":function(response){\n");
      out.write("\t\t\t\t\tconsole.log(response);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\":function(response){\n");
      out.write("\t\t\t\t\tconsole.log(response);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});//btn4 over\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"#btn5\").click(function(){\n");
      out.write("\t\t\tlayer.msg(\"layer的弹框\");\n");
      out.write("\t\t});//btn5 over\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<h1>欢迎访问主页</h1>\n");
      out.write("\t<br/>\n");
      out.write("\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/test/ssm.html\">测试SSM整合环境</a>\n");
      out.write("\t<br/>\n");
      out.write("\t<button id=\"btn1\">Test Jquery one：直接传入数组</button>\n");
      out.write("\t<br/>\n");
      out.write("\t<button id=\"btn2\">Test Jquery two：用一个专门类的成员接收</button>\n");
      out.write("\t<br/>\n");
      out.write("\t<button id=\"btn3\">Test Jquery three：使用json转化发送</button>\n");
      out.write("\t<br/>\n");
      out.write("\t<button id=\"btn4\">Test Jquery four：接收复杂对象</button>\n");
      out.write("\t\n");
      out.write("\t<br/>\n");
      out.write("\t<br/>\n");
      out.write("\t<button id=\"btn5\">点我测试layer弹框</button>\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
