/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.99
 * Generated at: 2020-04-22 07:18:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menu_002dpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/modal-menu-add.jsp", Long.valueOf(1587531766000L));
    _jspx_dependants.put("/WEB-INF/modal-menu-edit.jsp", Long.valueOf(1587531766000L));
    _jspx_dependants.put("/WEB-INF/include-head.jsp", Long.valueOf(1586946003000L));
    _jspx_dependants.put("/WEB-INF/include-sidebar.jsp", Long.valueOf(1587527500000L));
    _jspx_dependants.put("/WEB-INF/include-navigator.jsp", Long.valueOf(1587023898000L));
    _jspx_dependants.put("/WEB-INF/modal-menu-confirm.jsp", Long.valueOf(1587531766000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"UTF-8\">\n");
      out.write("<!-- 提取出head部分，单独包含进来 -->\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<meta charset=\"GB18030\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<meta name=\"description\" content=\"\">\n");
      out.write("<meta name=\"author\" content=\"\">\n");
      out.write("<base\n");
      out.write("\thref=\"http://");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"bootstrap/css/bootstrap.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/main.css\">\n");
      out.write("<style>\n");
      out.write(".tree li {\n");
      out.write("\tlist-style-type: none;\n");
      out.write("\tcursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tree-closed {\n");
      out.write("\theight: 40px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tree-expanded {\n");
      out.write("\theight: auto;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script src=\"jquery/jquery-2.1.1.min.js\"></script>\n");
      out.write("<script src=\"bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"script/docs.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"layer/layer.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$(\".list-group-item\").click(function() {\n");
      out.write("\t\t\tif ($(this).find(\"ul\")) {\n");
      out.write("\t\t\t\t$(this).toggleClass(\"tree-closed\");\n");
      out.write("\t\t\t\tif ($(this).hasClass(\"tree-closed\")) {\n");
      out.write("\t\t\t\t\t$(\"ul\", this).hide(\"fast\");\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t$(\"ul\", this).show(\"fast\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"ztree/zTreeStyle.css\"/>\n");
      out.write("<script type=\"text/javascript\" src=\"ztree/jquery.ztree.all-3.5.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"crowd/my-menu.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("\n");
      out.write("$(function(){\n");
      out.write("\t// 生成树形结构函数，具体方法在my-menu.js中\n");
      out.write("\tgenerateZtree();\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 给添加子节点按钮绑定单击响应函数\n");
      out.write("\t$(\"#treeDemo\").on(\"click\", \".addBtn\",function(){\n");
      out.write("\t\t// 将当前节点的id值 赋给 新节点的pid值\n");
      out.write("\t\twindow.Pid = this.id;\n");
      out.write("\t\t// 打开新节点添加模态框\n");
      out.write("\t\t$(\"#menuAddModal\").modal('show');\n");
      out.write("\t\treturn false;\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 给\"添加子节点的模态框\"中的“保存按钮”绑定单击响应函数\n");
      out.write("\t$(\"#menuSaveBtn\").click(function(){\n");
      out.write("\t\t// 1.收集表单数据\n");
      out.write("\t\tvar name = $.trim($(\"#menuAddModal [name=name]\").val());\n");
      out.write("\t\tvar url = $.trim($(\"#menuAddModal [name=url]\").val());\n");
      out.write("\t\tvar icon = $(\"#menuAddModal [name=icon]:checked\").val();\n");
      out.write("\t\t// 2.收集结束后发送ajax请求\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\t\"url\": \"menu/save.json\",\n");
      out.write("\t\t\t\"type\": \"post\",\n");
      out.write("\t\t\t\"data\": {\n");
      out.write("\t\t\t\t\"pid\": window.Pid,\n");
      out.write("\t\t\t\t\"name\": name,\n");
      out.write("\t\t\t\t\"url\": url,\n");
      out.write("\t\t\t\t\"icon\": icon\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\t\"dataType\": \"json\",\n");
      out.write("\t\t\t\"success\": function(response){\n");
      out.write("\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\tif(result == \"SUCCESS\"){\n");
      out.write("\t\t\t\t\tlayer.msg(\"添加成功！\");\n");
      out.write("\t\t\t\t\t// 待服务器端完成保存操作后，刷新树形结构\n");
      out.write("\t\t\t\t\tgenerateZtree();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(result == \"FAILED\"){\n");
      out.write("\t\t\t\t\tlayer.msg(\"操作失败！  \"+response.message);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\t\"error\": function(response){\n");
      out.write("\t\t\t\tlayer.msg(\"ajax发送失败  \" + response.status + response.statusText);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t// 3.发送请求后的“后续操作”\n");
      out.write("\t\t// 关闭模态框\n");
      out.write("\t\t$(\"#menuAddModal\").modal('hide');\n");
      out.write("\t\t// 点击重置按钮恢复表单,jQuery对象调用click()函数，里面不传任何参数，相当于用户点击了一下\n");
      out.write("\t\t$(\"#menuResetBtn\").click();\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 给编辑按钮绑定单击响应函数\n");
      out.write("\t$(\"#treeDemo\").on(\"click\",\".editBtn\",function(){\n");
      out.write("\t\t// 将当前节点的id保存到全局变量\n");
      out.write("\t\twindow.id = this.id;\n");
      out.write("\t\t// 打开模态框\n");
      out.write("\t\t$(\"#menuEditModal\").modal(\"show\");\n");
      out.write("\t\t// 获取zTreeObj对象\n");
      out.write("\t\tvar zTreeObj = $.fn.zTree.getZTreeObj(\"treeDemo\");\n");
      out.write("\t\t// 根据id属性查询节点对象\n");
      out.write("\t\t// 用来搜索节点的属性名\n");
      out.write("\t\tvar key = \"id\";\n");
      out.write("\t\t// 用来搜索节点的属性值\n");
      out.write("\t\tvar value = window.id;\n");
      out.write("\t\tvar currentNode = zTreeObj.getNodeByParam(key, value);\n");
      out.write("\t\t// 回显表单数据\n");
      out.write("\t\t$(\"#menuEditModal [name=name]\").val(currentNode.name);\n");
      out.write("\t\t$(\"#menuEditModal [name=url]\").val(currentNode.url);\n");
      out.write("\t\t// 回显radio可以这样理解：被选中的radio的value属性可以组成一个数组，\n");
      out.write("\t\t// 然后再用这个数组设置回radio，就能够把对应的值选中\n");
      out.write("\t\t$(\"#menuEditModal [name=icon]\").val([currentNode.icon]);\n");
      out.write("\t\treturn false;\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 给\"更新模态框\"中的\"更新按钮\"绑定单击响应函数\n");
      out.write("\t$(\"#menuEditBtn\").click(function(){\n");
      out.write("\t\t// 收集表单数据\n");
      out.write("\t\tvar name = $(\"#menuEditModal [name=name]\").val();\n");
      out.write("\t\tvar url = $(\"#menuEditModal [name=url]\").val();\n");
      out.write("\t\tvar icon = $(\"#menuEditModal [name=icon]:checked\").val();\n");
      out.write("\t\t// 发送Ajax请求\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\t\"url\":\"menu/update.json\",\n");
      out.write("\t\t\t\"type\":\"post\",\n");
      out.write("\t\t\t\"data\":{\n");
      out.write("\t\t\t\t\"id\": window.id,\n");
      out.write("\t\t\t\t\"name\":name,\n");
      out.write("\t\t\t\t\"url\":url,\n");
      out.write("\t\t\t\t\"icon\":icon\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\t\"dataType\":\"json\",\n");
      out.write("\t\t\t\"success\":function(response){\n");
      out.write("\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\tif(result == \"SUCCESS\") {\n");
      out.write("\t\t\t\t\tlayer.msg(\"操作成功！\");\n");
      out.write("\t\t\t\t\t// 重新加载树形结构，注意：要在确认服务器端完成保存操作后再刷新\n");
      out.write("\t\t\t\t\t// 否则有可能刷新不到最新的数据，因为这里是异步的\n");
      out.write("\t\t\t\t\tgenerateZtree();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(result == \"FAILED\") {\n");
      out.write("\t\t\t\t\tlayer.msg(\"操作失败！\"+response.message);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\t\"error\":function(response){\n");
      out.write("\t\t\t\tlayer.msg(response.status+\" \"+response.statusText);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t// 关闭模态框\n");
      out.write("\t\t$(\"#menuEditModal\").modal(\"hide\");\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 给“删除”按钮绑定单击响应函数\n");
      out.write("\t$(\"#treeDemo\").on(\"click\",\".removeBtn\",function(){\n");
      out.write("\t\t// 将当前节点的id保存到全局变量\n");
      out.write("\t\twindow.id = this.id;\n");
      out.write("\t\t// 打开模态框\n");
      out.write("\t\t$(\"#menuConfirmModal\").modal(\"show\");\n");
      out.write("\t\t// 获取zTreeObj对象\n");
      out.write("\t\tvar zTreeObj = $.fn.zTree.getZTreeObj(\"treeDemo\");\n");
      out.write("\t\t// 根据id属性查询节点对象\n");
      out.write("\t\t// 用来搜索节点的属性名\n");
      out.write("\t\tvar key = \"id\";\n");
      out.write("\t\t// 用来搜索节点的属性值\n");
      out.write("\t\tvar value = window.id;\n");
      out.write("\t\tvar currentNode = zTreeObj.getNodeByParam(key, value);\n");
      out.write("\t\t$(\"#removeNodeSpan\").html(\"【<i class='\"+currentNode.icon+\"'></i>\"+currentNode.name+\"】\");\n");
      out.write("\t\treturn false;\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 给“确认删除模态框”中的“OK按钮”绑定单击响应函数\n");
      out.write("\t$(\"#confirmBtn\").click(function(){\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\t\"url\":\"menu/remove.json\",\n");
      out.write("\t\t\t\"type\":\"post\",\n");
      out.write("\t\t\t\"data\":{\n");
      out.write("\t\t\t\t\"menuId\":window.id\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\t\"dataType\":\"json\",\n");
      out.write("\t\t\t\"success\":function(response){\n");
      out.write("\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\tif(result == \"SUCCESS\") {\n");
      out.write("\t\t\t\t\tlayer.msg(\"操作成功！\");\n");
      out.write("\t\t\t\t\t// 重新加载树形结构，注意：要在确认服务器端完成保存操作后再刷新\n");
      out.write("\t\t\t\t\t// 否则有可能刷新不到最新的数据，因为这里是异步的\n");
      out.write("\t\t\t\t\tgenerateZtree();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(result == \"FAILED\") {\n");
      out.write("\t\t\t\t\tlayer.msg(\"操作失败！\"+response.message);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\t\"error\":function(response){\n");
      out.write("\t\t\t\tlayer.msg(response.status+\" \"+response.statusText);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t// 关闭模态框\n");
      out.write("\t\t$(\"#menuConfirmModal\").modal(\"hide\");\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<!-- 提取出navigator部分，单独包含进来 -->\n");
      out.write("\t");
      out.write("\n");
      out.write("<nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n");
      out.write("\t\t<div class=\"container-fluid\">\n");
      out.write("\t\t\t<div class=\"navbar-header\">\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t<a class=\"navbar-brand\" style=\"font-size: 32px;\" href=\"#\">众筹平台\n");
      out.write("\t\t\t\t\t\t- 控制面板</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div id=\"navbar\" class=\"navbar-collapse collapse\">\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t\t<li style=\"padding-top: 8px;\">\n");
      out.write("\t\t\t\t\t\t<div class=\"btn-group\">\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\"\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"btn btn-default btn-success dropdown-toggle\"\n");
      out.write("\t\t\t\t\t\t\t\tdata-toggle=\"dropdown\">\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-user\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginAdmin.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" \n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"caret\"></span>\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"dropdown-menu\" role=\"menu\">\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\"><i class=\"glyphicon glyphicon-cog\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t个人设置</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\"><i class=\"glyphicon glyphicon-comment\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t消息</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"divider\"></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"admin/do/logout.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-off\"></i> 退出系统</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li style=\"margin-left: 10px; padding-top: 8px;\">\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-danger\">\n");
      out.write("\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-question-sign\"></span> 帮助\n");
      out.write("\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t\t<form class=\"navbar-form navbar-right\">\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"查询\">\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</nav>");
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"container-fluid\">\n");
      out.write("\t\t<div class=\"row\">\n");
      out.write("\n");
      out.write("\t\t\t<!-- 提取出sidebar部分，单独包含进来 -->\n");
      out.write("\t\t\t");
      out.write("\n");
      out.write("<div class=\"col-sm-3 col-md-2 sidebar\">\n");
      out.write("\t\t\t\t<div class=\"tree\">\n");
      out.write("\t\t\t\t\t<ul style=\"padding-left: 0px;\" class=\"list-group\">\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><a href=\"main.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-dashboard\"></i> 控制面板</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><span><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon glyphicon-tasks\"></i> 权限管理 <span\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"badge\" style=\"float: right\">3</span></span>\n");
      out.write("\t\t\t\t\t\t\t<ul style=\"margin-top: 10px; display: none;\">\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"admin/get/page.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i> 用户维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"role/to/page.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-king\"></i> 角色维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"menu/to/page.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-lock\"></i> 菜单维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><span><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-ok\"></i> 业务审核 <span class=\"badge\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"float: right\">3</span></span>\n");
      out.write("\t\t\t\t\t\t\t<ul style=\"margin-top: 10px; display: none;\">\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"auth_cert.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-check\"></i> 实名认证审核</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"auth_adv.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-check\"></i> 广告审核</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"auth_project.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-check\"></i> 项目审核</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><span><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-th-large\"></i> 业务管理 <span\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"badge\" style=\"float: right\">7</span></span>\n");
      out.write("\t\t\t\t\t\t\t<ul style=\"margin-top: 10px; display: none;\">\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"cert.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-picture\"></i> 资质维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"type.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-equalizer\"></i> 分类管理</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"process.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-random\"></i> 流程管理</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"advertisement.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-hdd\"></i> 广告管理</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"message.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-comment\"></i> 消息模板</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"project_type.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-list\"></i> 项目分类</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"tag.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-tags\"></i> 项目标签</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><a href=\"param.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-list-alt\"></i> 参数管理</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t<!-- 主页部分 -->\n");
      out.write("\t\t\t<div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"panel panel-default\">\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t\t<i class=\"glyphicon glyphicon-th-list\"></i> 权限菜单列表\n");
      out.write("\t\t\t\t\t\t<div style=\"float: right; cursor: pointer;\" data-toggle=\"modal\"\n");
      out.write("\t\t\t\t\t\t\tdata-target=\"#myModal\">\n");
      out.write("\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-question-sign\"></i>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\n");
      out.write("\t\t\t\t\t\t<!-- 借助ztree显示菜单主体 -->\n");
      out.write("\t\t\t\t\t\t<ul id=\"treeDemo\" class=\"ztree\"></ul>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<!-- 包含模态框 -->\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<div id=\"menuAddModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\r\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">尚筹网系统弹窗</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<form>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t请输入节点名称：<input type=\"text\" name=\"name\" /><br />\r\n");
      out.write("\t\t\t\t\t请输入URL地址：<input type=\"text\" name=\"url\" /><br />\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-th-list\"></i>\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-th-list\" />&nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-dashboard\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-dashboard\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon glyphicon-tasks\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon glyphicon-tasks\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-user\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-user\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-king\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-king\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-lock\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-lock\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-ok\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-ok\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-check\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-check\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-th-large\"></i>\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-th-large\" /> <br /> \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-picture\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-picture\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-equalizer\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-equalizer\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-random\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-random\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-hdd\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-hdd\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-comment\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-comment\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-list\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-list\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-tags\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-tags\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-list-alt\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-list-alt\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button id=\"menuSaveBtn\" type=\"button\" class=\"btn btn-default\"><i class=\"glyphicon glyphicon-plus\"></i> 保存</button>\r\n");
      out.write("\t\t\t\t\t<button id=\"menuResetBtn\" type=\"reset\" class=\"btn btn-primary\"><i class=\"glyphicon glyphicon-refresh\"></i> 重置</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("<div id=\"menuEditModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\r\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">尚筹网系统弹窗</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<form>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t请输入节点名称：<input type=\"text\" name=\"name\" /><br />\r\n");
      out.write("\t\t\t\t\t请输入URL地址：<input type=\"text\" name=\"url\" /><br />\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-th-list\"></i>\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-th-list\" />&nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-dashboard\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-dashboard\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon glyphicon-tasks\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon glyphicon-tasks\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-user\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-user\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-king\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-king\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-lock\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-lock\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-ok\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-ok\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-check\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-check\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-th-large\"></i>\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-th-large\" /> <br /> \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-picture\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-picture\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-equalizer\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-equalizer\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-random\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-random\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-hdd\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-hdd\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-comment\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-comment\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-list\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-list\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-tags\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-tags\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<i class=\"glyphicon glyphicon-list-alt\"></i> \r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"icon\" value=\"glyphicon glyphicon-list-alt\" /> &nbsp;\r\n");
      out.write("\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button id=\"menuEditBtn\" type=\"button\" class=\"btn btn-default\"><i class=\"glyphicon glyphicon-edit\"></i> 更新</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("<div id=\"menuConfirmModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\r\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">尚筹网系统弹窗</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<form>\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t您真的要删除<span id=\"removeNodeSpan\"></span>这个节点吗？\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button id=\"confirmBtn\" type=\"button\" class=\"btn btn-danger\"><i class=\"glyphicon glyphicon-ok\"></i> OK</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
