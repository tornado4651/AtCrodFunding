/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.99
 * Generated at: 2020-04-27 12:12:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class role_002dpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/WEB-INF/modal-role-confirm.jsp", Long.valueOf(1587370829000L));
    _jspx_dependants.put("/WEB-INF/include-head.jsp", Long.valueOf(1586946003000L));
    _jspx_dependants.put("/WEB-INF/include-sidebar.jsp", Long.valueOf(1587527500000L));
    _jspx_dependants.put("/WEB-INF/include-navigator.jsp", Long.valueOf(1587023898000L));
    _jspx_dependants.put("/WEB-INF/modal-role-add.jsp", Long.valueOf(1587356831000L));
    _jspx_dependants.put("/WEB-INF/modal-role-edit.jsp", Long.valueOf(1587362466000L));
    _jspx_dependants.put("/WEB-INF/modal-role-assign-auth.jsp", Long.valueOf(1587976080000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"UTF-8\">\n");
      out.write("<!-- 提取出navigator部分，单独包含进来 -->\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<meta charset=\"GB18030\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<meta name=\"description\" content=\"\">\n");
      out.write("<meta name=\"author\" content=\"\">\n");
      out.write("<base\n");
      out.write("\thref=\"http://");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"bootstrap/css/bootstrap.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/main.css\">\n");
      out.write("<style>\n");
      out.write(".tree li {\n");
      out.write("\tlist-style-type: none;\n");
      out.write("\tcursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tree-closed {\n");
      out.write("\theight: 40px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tree-expanded {\n");
      out.write("\theight: auto;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script src=\"jquery/jquery-2.1.1.min.js\"></script>\n");
      out.write("<script src=\"bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"script/docs.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"layer/layer.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t$(function() {\n");
      out.write("\t\t$(\".list-group-item\").click(function() {\n");
      out.write("\t\t\tif ($(this).find(\"ul\")) {\n");
      out.write("\t\t\t\t$(this).toggleClass(\"tree-closed\");\n");
      out.write("\t\t\t\tif ($(this).hasClass(\"tree-closed\")) {\n");
      out.write("\t\t\t\t\t$(\"ul\", this).hide(\"fast\");\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t$(\"ul\", this).show(\"fast\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>");
      out.write("\n");
      out.write("<title>角色管理</title>\n");
      out.write("\n");
      out.write("<!-- 引入pagination的两个文件，jQuery已经引入在head中了，不需要再引入了 -->\n");
      out.write("<!-- 注意顺序！一定要在jQuery的后面 -->\n");
      out.write("<link rel=\"stylesheet\" href=\"css/pagination.css\" />\n");
      out.write("<script type=\"text/javascript\" src=\"jquery/jquery.pagination.js\"></script>\n");
      out.write("\n");
      out.write("<!-- 引入zTree工具的环境 -->\n");
      out.write("<link rel=\"stylesheet\" href=\"ztree/zTreeStyle.css\"/>\n");
      out.write("<script type=\"text/javascript\" src=\"ztree/jquery.ztree.all-3.5.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- 引入自定义js函数 -->\n");
      out.write("<script type=\"text/javascript\" src=\"crowd/my-role.js\"></script>\n");
      out.write("\n");
      out.write("<!-- 本页需要的js函数 -->\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t// 该页面使用Ajax请求准备初始化数据\n");
      out.write("\t$(function(){\n");
      out.write("\t\t// 1.为分页操作准备初始化数据\n");
      out.write("\t\twindow.pageNum = 1;\n");
      out.write("\t\twindow.pageSize = 5;\n");
      out.write("\t\twindow.keyword = \"\";\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 2.调用包含进来的‘crowd/my-role.js’中的函数生成页面\n");
      out.write("\t\tgeneratePage();\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 3.给查询按钮绑定函数,实现查询功能\n");
      out.write("\t\t$(\"#searchBtn\").click(function(){\n");
      out.write("\t\t\t// 先将搜索关键字赋值给全局变量\n");
      out.write("\t\t\twindow.keyword = $(\"#keywordInput\").val();\n");
      out.write("\t\t\t// 然后再次调用生成page函数，生成页面\n");
      out.write("\t\t\tgeneratePage();\n");
      out.write("\t\t\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 4.点击“新增”按钮打开模态框\n");
      out.write("\t\t$(\"#showAddModalBtn\").click(function(){\n");
      out.write("\t\t\t$(\"#addModal\").modal('show');\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 5.给新增模态框的保存按钮绑定响应函数\n");
      out.write("\t\t$(\"#saveRoleBtn\").click(function(){\n");
      out.write("\t\t\t// 获取新建的roleName\n");
      out.write("\t\t\t// $.trim(）函数表示取出前后空格\n");
      out.write("\t\t\tvar roleName = $.trim($(\"#addModal [name=roleName]\").val());\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//发送Ajax请求\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"role/save.json\",\n");
      out.write("\t\t\t\t\"type\": \"post\",\n");
      out.write("\t\t\t\t\"data\": {\n");
      out.write("\t\t\t\t\t\"name\": roleName\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"dataType\": \"json\",\n");
      out.write("\t\t\t\t\"success\": function(response){\n");
      out.write("\t\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\t\tif(result == \"SUCCESS\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作成功！已保存\");\n");
      out.write("\t\t\t\t\t\t// 重新加载分页,并定位到最后一位\n");
      out.write("\t\t\t\t\t\twindow.pageNum = 9999999;\n");
      out.write("\t\t\t\t\t\tgeneratePage();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tif(result == \"FAILED\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作失败！\"+response.message);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\": function(response){\n");
      out.write("\t\t\t\t\tlayer.msg(response.status+\" \"+response.statusText);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t// 关闭模态框\n");
      out.write("\t\t\t$(\"#addModal\").modal('hide');\n");
      out.write("\t\t\t// 清理模态框\n");
      out.write("\t\t\t$(\"#addModal [name=roleName]\").val(\"\");\n");
      out.write("\t\t  });\n");
      out.write("\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t// 6.给页面上的“更新”按钮绑定单击响应函数，目的是打开模态框\n");
      out.write("\t\t// 传统的事件绑定方式只能在第一个页面有效，翻页后失效了\n");
      out.write("\t\t// $(\".editBtn\").click(function(){\n");
      out.write("\t\t// \talert(\"aaaa...\");\n");
      out.write("\t\t// });\n");
      out.write("\t\t\n");
      out.write("\t\t// 使用jQuery对象的on()函数可以解决上面问题\n");
      out.write("\t\t// ①首先找到所有“动态生成”的元素所附着的“静态”元素\n");
      out.write("\t\t// ②on()函数的第一个参数是事件类型\n");
      out.write("\t\t// ③on()函数的第二个参数是找到真正要绑定事件的元素的选择器\n");
      out.write("\t\t// ③on()函数的第三个参数是事件的响应函数\n");
      out.write("\t\t$(\"#rolePageBody\").on(\"click\",\".editBtn\",function(){\n");
      out.write("\t\t\t$(\"#editModal\").modal('show');\n");
      out.write("\t\t\t//获取主要数据\n");
      out.write("\t\t\tvar roleName = $(this).parent().prev().text();\n");
      out.write("\t\t\twindow.roleId = this.id;\n");
      out.write("\t\t\t//回显到模态框中\n");
      out.write("\t\t\t$(\"#editModal [name=roleName]\").val(roleName);\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 7.给“更新模态框”中的更新按钮绑定单击响应函数\n");
      out.write("\t\t$(\"#updateRoleBtn\").click(function(){\n");
      out.write("\t\t\t// 从文本框中取出新的roleName\n");
      out.write("\t\t\tvar roleName = $(\"#editModal [name=roleName]\").val();\n");
      out.write("\t\t\t//发送ajax请求执行更新\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"role/update.json\",\n");
      out.write("\t\t\t\t\"type\": \"post\",\n");
      out.write("\t\t\t\t\"data\": {\n");
      out.write("\t\t\t\t\t\"id\": window.roleId,\n");
      out.write("\t\t\t\t\t\"name\": roleName\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"dataType\": \"json\",\n");
      out.write("\t\t\t\t\"success\": function(response){\n");
      out.write("\t\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\t\tif(result == \"SUCCESS\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作成功！已保存\");\n");
      out.write("\t\t\t\t\t\t// 重新加载分页,并定位到最后一位\n");
      out.write("\t\t\t\t\t\tgeneratePage();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tif(result == \"FAILED\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作失败！\"+response.message);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\": function(response){\n");
      out.write("\t\t\t\t\tlayer.msg(response.status+\" \"+response.statusText);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t// 关闭模态框\n");
      out.write("\t\t\t$(\"#editModal\").modal('hide');\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 8.给“确认删除模态框“中的”确认删除“按钮，绑定执行删除的ajax请求\n");
      out.write("\t\t$(\"#removeRoleBtn\").click(function(){\n");
      out.write("\t\t\t// 先将全局变量window.roleIdArray转化成json格式\n");
      out.write("\t\t\t// window.roleIdArray中的值已经在showConfirmModal()函数中传好了。\n");
      out.write("\t\t\tvar roleIdArrayJson = JSON.stringify(window.roleIdArray);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"role/remove/by/role/id/array.json\",\n");
      out.write("\t\t\t\t\"type\": \"post\",\n");
      out.write("\t\t\t\t\"data\": roleIdArrayJson,\n");
      out.write("\t\t\t\t\"contentType\": \"application/json; charset=UTF-8\",\n");
      out.write("\t\t\t\t\"dataType\": \"json\",\n");
      out.write("\t\t\t\t\"success\": function(response){\n");
      out.write("\t\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\t\tif(result == \"SUCCESS\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作成功！已删除！\");\n");
      out.write("\t\t\t\t\t\t// 重新加载分页,并定位到最后一位\n");
      out.write("\t\t\t\t\t\tgeneratePage();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tif(result == \"FAILED\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作失败！\"+response.message);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\": function(response){\n");
      out.write("\t\t\t\t\tlayer.msg(response.status+\" \"+response.statusText);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t \t});//ajax over\n");
      out.write("\t\t \t\n");
      out.write("\t\t\t// 关闭模态框\n");
      out.write("\t\t\t$(\"#confirmModal\").modal('hide');\n");
      out.write("\t\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 9.给单条删除按钮绑定单击事件,和修改类似\n");
      out.write("\t\t$(\"#rolePageBody\").on(\"click\", \".removeBtn\", function(){\n");
      out.write("\t\t\t//准备好roleArray\n");
      out.write("\t\t\tvar roleArray = [{\n");
      out.write("\t\t\t\troleId: this.id,\n");
      out.write("\t\t\t\troleName: $(this).parent().prev().text()\n");
      out.write("\t\t\t}];\n");
      out.write("\t\t\t//打开模态框\n");
      out.write("\t\t\tshowConfirmModal(roleArray);\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 10.给总的checkBox绑定单击响应函数\n");
      out.write("\t\t$(\"#summaryBox\").click(function(){\n");
      out.write("\t\t\t// 获取当前多选框的自身状态\n");
      out.write("\t\t\tvar currentStatus = this.checked;\n");
      out.write("\t\t\t// 用当前状态设置其他多选框状态\n");
      out.write("\t\t\t$(\".itemBox\").prop(\"checked\", currentStatus);\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 11.全选、全不选的反向操作\n");
      out.write("\t\t$(\"#rolePageBody\").on(\"click\",\".itemBox\",function(){\n");
      out.write("\t\t\t// 获取当前已经选中的itemBox数量\n");
      out.write("\t\t\tvar checkedBoxCount = $(\".itemBox:checked\").length;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// 获取全部itemBox的数量\n");
      out.write("\t\t\tvar totalBoxCount = $(\".itemBox\").length;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//使用二者的比较结果设置总checkBox的属性\n");
      out.write("\t\t\t$(\"#summaryBox\").prop(\"checked\", checkedBoxCount == totalBoxCount);\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 12.给批量删除按钮绑定单击响应函数\n");
      out.write("\t\t$(\"#batchRemoveBtn\").click(function(){\n");
      out.write("\t\t\t// 创建一个数组对象，用来存放后面获取到的角色对象\n");
      out.write("\t\t\tvar roleArray = [];\n");
      out.write("\t\t\t// 遍历当前选中的文本框\n");
      out.write("\t\t\t$(\".itemBox:checked\").each(function(){\n");
      out.write("\t\t\t\t//使用this引用当前遍历得到的多选框\n");
      out.write("\t\t\t\tvar roleId = this.id;\n");
      out.write("\t\t\t\tvar roleName = $(this).parent().next().text();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\troleArray.push({\n");
      out.write("\t\t\t\t\t\"roleId\": roleId,\n");
      out.write("\t\t\t\t\t\"roleName\": roleName\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t// 判断选择的为空\n");
      out.write("\t\t\tif(roleArray.length == 0){\n");
      out.write("\t\t\t\tlayer.msg(\"请至少选择一个执行删除\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 如果角色数组有效，弹出确认提示框\n");
      out.write("\t\t\tshowConfirmModal(roleArray);\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 13.给编辑auth按钮绑定“显示模态框”的单击事件\n");
      out.write("\t\t$(\"#rolePageBody\").on(\"click\",\".checkBtn\",function(){\n");
      out.write("\t\t\twindow.roleId = this.id;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//打开模态框\n");
      out.write("\t\t\t$(\"#assignModal\").modal('show');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// 在模态框中装配角色树形结构数据\n");
      out.write("\t\t\tfillAuthTree();\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 14. 给“分配权限”确定按钮绑定单击响应函数\n");
      out.write("\t\t$(\"#assignBtn\").click(function(){\n");
      out.write("\t\t\t// 14.1: 收集树形结构的各个节点中被选中的节点的id\n");
      out.write("\t\t\tvar authIdArray = [];\n");
      out.write("\t\t\tvar zTreeObj = $.fn.zTree.getZTreeObj(\"authTreeDemo\");\n");
      out.write("\t\t\tvar checkedNodes = zTreeObj.getCheckedNodes();\n");
      out.write("\t\t\t//遍历所有勾选的节点\n");
      out.write("\t\t\tfor(var i=0; i <checkedNodes.length; i++){\n");
      out.write("\t\t\t\tvar checkedNode = checkedNodes[i];\n");
      out.write("\t\t\t\tvar authId = checkedNode.id;\n");
      out.write("\t\t\t\tauthIdArray.push(authId);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// 14.2:发送请求执行分配\n");
      out.write("\t\t\tvar requestBody = {\n");
      out.write("\t\t\t\t\t\"roleId\": [window.roleId],\n");
      out.write("\t\t\t\t\t\"authIdArray\": authIdArray\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\trequestBody = JSON.stringify(requestBody);\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\"url\": \"assign/do/role/assign/auth.json\",\n");
      out.write("\t\t\t\t\"type\": \"post\",\n");
      out.write("\t\t\t\t\"contentType\": \"application/json;charset=UTF-8\",\n");
      out.write("\t\t\t\t\"data\": requestBody,\n");
      out.write("\t\t\t\t\"dataType\": \"json\",\n");
      out.write("\t\t\t\t\"success\":function(response){\n");
      out.write("\t\t\t\t\tvar result = response.result;\n");
      out.write("\t\t\t\t\tif(result == \"SUCCESS\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作成功!\");\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tif(result == \"FAILED\"){\n");
      out.write("\t\t\t\t\t\tlayer.msg(\"操作失败！\" + response.message);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t\"error\": function(response){\n");
      out.write("\t\t\t\t\tlayer.msg(response.status + \" \" + response.statusText);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t// 后续操作\n");
      out.write("\t\t\t$(\"#assignModal\").modal('hide');\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<!-- 提取出navigator部分，单独包含进来 -->\n");
      out.write("\t");
      out.write("\n");
      out.write("<nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n");
      out.write("\t\t<div class=\"container-fluid\">\n");
      out.write("\t\t\t<div class=\"navbar-header\">\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t<a class=\"navbar-brand\" style=\"font-size: 32px;\" href=\"#\">众筹平台\n");
      out.write("\t\t\t\t\t\t- 控制面板</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div id=\"navbar\" class=\"navbar-collapse collapse\">\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t\t<li style=\"padding-top: 8px;\">\n");
      out.write("\t\t\t\t\t\t<div class=\"btn-group\">\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\"\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"btn btn-default btn-success dropdown-toggle\"\n");
      out.write("\t\t\t\t\t\t\t\tdata-toggle=\"dropdown\">\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-user\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginAdmin.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" \n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"caret\"></span>\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"dropdown-menu\" role=\"menu\">\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\"><i class=\"glyphicon glyphicon-cog\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t个人设置</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"#\"><i class=\"glyphicon glyphicon-comment\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t消息</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"divider\"></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li><a href=\"admin/do/logout.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-off\"></i> 退出系统</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li style=\"margin-left: 10px; padding-top: 8px;\">\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-danger\">\n");
      out.write("\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-question-sign\"></span> 帮助\n");
      out.write("\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t\t<form class=\"navbar-form navbar-right\">\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"查询\">\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</nav>");
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"container-fluid\">\n");
      out.write("\t\t<div class=\"row\">\n");
      out.write("\n");
      out.write("\t\t\t<!-- 提取出sidebar部分，单独包含进来 -->\n");
      out.write("\t\t\t");
      out.write("\n");
      out.write("<div class=\"col-sm-3 col-md-2 sidebar\">\n");
      out.write("\t\t\t\t<div class=\"tree\">\n");
      out.write("\t\t\t\t\t<ul style=\"padding-left: 0px;\" class=\"list-group\">\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><a href=\"main.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-dashboard\"></i> 控制面板</a></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><span><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon glyphicon-tasks\"></i> 权限管理 <span\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"badge\" style=\"float: right\">3</span></span>\n");
      out.write("\t\t\t\t\t\t\t<ul style=\"margin-top: 10px; display: none;\">\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"admin/get/page.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-user\"></i> 用户维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"role/to/page.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-king\"></i> 角色维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"menu/to/page.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-lock\"></i> 菜单维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><span><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-ok\"></i> 业务审核 <span class=\"badge\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"float: right\">3</span></span>\n");
      out.write("\t\t\t\t\t\t\t<ul style=\"margin-top: 10px; display: none;\">\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"auth_cert.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-check\"></i> 实名认证审核</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"auth_adv.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-check\"></i> 广告审核</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"auth_project.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-check\"></i> 项目审核</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><span><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-th-large\"></i> 业务管理 <span\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"badge\" style=\"float: right\">7</span></span>\n");
      out.write("\t\t\t\t\t\t\t<ul style=\"margin-top: 10px; display: none;\">\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"cert.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-picture\"></i> 资质维护</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"type.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-equalizer\"></i> 分类管理</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"process.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-random\"></i> 流程管理</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"advertisement.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-hdd\"></i> 广告管理</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"message.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-comment\"></i> 消息模板</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"project_type.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-list\"></i> 项目分类</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t<li style=\"height: 30px;\"><a href=\"tag.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-tags\"></i> 项目标签</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\n");
      out.write("\t\t\t\t\t\t<li class=\"list-group-item tree-closed\"><a href=\"param.html\"><i\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"glyphicon glyphicon-list-alt\"></i> 参数管理</a></li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div class=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n");
      out.write("\t\t\t\t<div class=\"panel panel-default\">\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t\t<h3 class=\"panel-title\">\n");
      out.write("\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-th\"></i> 数据列表\n");
      out.write("\t\t\t\t\t\t</h3>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\n");
      out.write("\t\t\t\t\t\t<form class=\"form-inline\" role=\"form\" style=\"float: left;\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group has-feedback\">\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"input-group-addon\">查询条件</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t<input  id=\"keywordInput\" class=\"form-control has-success\" type=\"text\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"请输入查询条件\">\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<button id=\"searchBtn\" type=\"button\" class=\"btn btn-warning\">\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-search\"></i> 查询\n");
      out.write("\t\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t\t\t<button id=\"batchRemoveBtn\" type=\"button\" class=\"btn btn-danger\"\n");
      out.write("\t\t\t\t\t\t\tstyle=\"float: right; margin-left: 10px;\">\n");
      out.write("\t\t\t\t\t\t\t<i class=\" glyphicon glyphicon-remove\"></i> 删除\n");
      out.write("\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t<button id=\"showAddModalBtn\" type=\"button\" class=\"btn btn-primary\"\n");
      out.write("\t\t\t\t\t\t\tstyle=\"float: right;\">\n");
      out.write("\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-plus\"></i> 新增\n");
      out.write("\t\t\t\t\t\t</button>\n");
      out.write("\t\t\t\t\t\t<br>\n");
      out.write("\t\t\t\t\t\t<hr style=\"clear: both;\">\n");
      out.write("\t\t\t\t\t\t<div class=\"table-responsive\">\n");
      out.write("\t\t\t\t\t\t\t<table class=\"table  table-bordered\">\n");
      out.write("\t\t\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th width=\"30\">#</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th width=\"30\"><input id=\"summaryBox\" type=\"checkbox\"></th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>名称</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th width=\"100\">操作</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t\t\t\t<tbody id=\"rolePageBody\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- 这里使用JS代码请求填充 -->\n");
      out.write("\t\t\t\t\t\t\t\t</tbody>\n");
      out.write("\t\t\t\t\t\t\t\t<tfoot>\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td colspan=\"6\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div id=\"Pagination\" class=\"pagination\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<!-- 这里显示分页 -->\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t</tfoot>\n");
      out.write("\t\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<!-- 加入模态框 -->\n");
      out.write("\t");
      out.write("\n");
      out.write("<div id=\"addModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\n");
      out.write("\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t<div class=\"modal-header\">\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">系统弹窗</h4>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-body\">\n");
      out.write("\t\t\t\t<form class=\"form-signin\" role=\"form\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<div class=\"form-group has-success has-feedback\">\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"roleName\" class=\"form-control\"\n");
      out.write("\t\t\t\t\t\t\t placeholder=\"请输入角色名称\" autofocus>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-footer\">\n");
      out.write("\t\t\t\t<button id=\"saveRoleBtn\" type=\"button\" class=\"btn btn-primary\">保存</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- /.modal-content -->\n");
      out.write("\t</div>\n");
      out.write("\t<!-- /.modal-dialog -->\n");
      out.write("</div>\n");
      out.write("<!-- /.modal -->");
      out.write('\n');
      out.write('	');
      out.write("\n");
      out.write("<div id=\"editModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\n");
      out.write("\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t<div class=\"modal-header\">\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">系统弹窗</h4>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-body\">\n");
      out.write("\t\t\t\t<form class=\"form-signin\" role=\"form\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<div class=\"form-group has-success has-feedback\">\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"roleName\" class=\"form-control\" autofocus/>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</form>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-footer\">\n");
      out.write("\t\t\t\t<button id=\"updateRoleBtn\" type=\"button\" class=\"btn btn-primary\">更新</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- /.modal-content -->\n");
      out.write("\t</div>\n");
      out.write("\t<!-- /.modal-dialog -->\n");
      out.write("</div>\n");
      out.write("<!-- /.modal -->");
      out.write('\n');
      out.write('	');
      out.write("\n");
      out.write("<div id=\"confirmModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\n");
      out.write("\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t<div class=\"modal-header\">\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">系统弹窗</h4>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-body\">\n");
      out.write("\t\t\t\t<!-- 显示确认信息 -->\n");
      out.write("\t\t\t\t<h4>请确认是否要删除下列角色:</h4>\n");
      out.write("\t\t\t\t<span id=\"roleNameSpan\" style=\"text-align:center;\"></span>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-footer\">\n");
      out.write("\t\t\t\t<button id=\"removeRoleBtn\" type=\"button\" class=\"btn btn-primary\">确认删除</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- /.modal-content -->\n");
      out.write("\t</div>\n");
      out.write("\t<!-- /.modal-dialog -->\n");
      out.write("</div>\n");
      out.write("<!-- /.modal -->");
      out.write('\n');
      out.write('	');
      out.write("\n");
      out.write("<div id=\"assignModal\" class=\"modal fade\" tabindex=\"1\" role=\"dialog\">\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\n");
      out.write("\t\t<div class=\"modal-content\">\n");
      out.write("\t\t\t<div class=\"modal-header\">\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n");
      out.write("\t\t\t\t</button>\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">商筹网系统弹窗</h4>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-body\">\n");
      out.write("\t\t\t\t<ul id=\"authTreeDemo\" class=\"ztree\">\n");
      out.write("\t\t\t\t\t<!-- 这里显示书结构内容 -->\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"modal-footer\">\n");
      out.write("\t\t\t\t<button id=\"assignBtn\" type=\"button\" class=\"btn btn-primary\">好的！我设置好了！执行分配！</button>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
